name: Build, Release and Push Docker Image

on:
  push:
    branches: [ develop ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Extract version number
      id: vars
      run: echo "version=1.0.${{ github.run_number }}" >> $GITHUB_OUTPUT
      
    - name: Set lowercase repo name
      run: echo "repo_name=${{ github.repository }}" | tr '[:upper:]' '[:lower:]' >> $GITHUB_ENV
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x' # Specify your .NET version here

    - name: Restore dependencies
      run: dotnet restore

    - name: Build application
      run: dotnet build --configuration Release --no-restore
      
    - name: Run tests
      run: dotnet test --no-restore

    - name: Publish application
      run: dotnet publish ClubDoorman/ClubDoorman.csproj -c Release -o publish

    - name: Get Build Info
      id: build_info
      run: |
        echo "date=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
        echo "commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT
        echo "author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.vars.outputs.version }}
        name: Release v${{ steps.vars.outputs.version }}
        body: |
          ## GateTroitsBot v${{ steps.vars.outputs.version }}
          
          **–°–±–æ—Ä–∫–∞:**
          - –ö–æ–º–º–∏—Ç: ${{ steps.build_info.outputs.commit }}
          
          **Docker –æ–±—Ä–∞–∑:** 
          ```
          ghcr.io/${{ env.repo_name }}:${{ steps.vars.outputs.version }}
          ```
          
          **–ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Docker Compose:**
          ```yaml
          version: '3'
          services:
            doorman:
              image: ghcr.io/${{ env.repo_name }}:${{ steps.vars.outputs.version }}
              restart: always
              volumes:
                - ./data:/app/data
              environment:
                - DOORMAN_BOT_API=1234567890:AAAA-YOUR-TOKEN-HERE
                - DOORMAN_ADMIN_CHAT=-1001234567890
          ```
          
          **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:**
          üîó [–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞](https://telegra.ph/GateTroitsBot-04-19) - –≤—Å—ë –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker image
      run: docker build -t ghcr.io/${{ env.repo_name }}:latest -t ghcr.io/${{ env.repo_name }}:${{ steps.vars.outputs.version }} ./ClubDoorman
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker image to GitHub Container Registry
      run: |
        docker push ghcr.io/${{ env.repo_name }}:latest
        docker push ghcr.io/${{ env.repo_name }}:${{ steps.vars.outputs.version }}
