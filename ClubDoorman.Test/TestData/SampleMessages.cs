using Telegram.Bot.Types;

namespace ClubDoorman.TestData;

/// <summary>
/// –§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
/// </summary>
public static class SampleMessages
{
    public static Message CreateValidMessage()
    {
        return new Message
        {
            Date = DateTime.UtcNow,
            Chat = new Chat { Id = 123456789, Type = Telegram.Bot.Types.Enums.ChatType.Group },
            From = CreateValidUser(),
            Text = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."
        };
    }

    public static Message CreateSpamMessage()
    {
        return new Message
        {
            Date = DateTime.UtcNow,
            Chat = new Chat { Id = 123456789, Type = Telegram.Bot.Types.Enums.ChatType.Group },
            From = CreateValidUser(),
            Text = "–ö–£–ü–ò–¢–ï –ù–ê–®–ò –¢–û–í–ê–†–´ –ü–û –°–£–ü–ï–† –¶–ï–ù–ï!!! üî•üî•üî•"
        };
    }

    public static Message CreateMimicryMessage()
    {
        return new Message
        {
            Date = DateTime.UtcNow,
            Chat = new Chat { Id = 123456789, Type = Telegram.Bot.Types.Enums.ChatType.Group },
            From = CreateValidUser(),
            Text = "–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º! –ö–∞–∫ –¥–µ–ª–∞?"
        };
    }

    public static Message CreateBadMessage()
    {
        return new Message
        {
            Date = DateTime.UtcNow,
            Chat = new Chat { Id = 123456789, Type = Telegram.Bot.Types.Enums.ChatType.Group },
            From = CreateValidUser(),
            Text = "–ò–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–ø–∞–º-—Å–æ–æ–±—â–µ–Ω–∏–µ"
        };
    }

    public static User CreateValidUser()
    {
        return new User
        {
            Id = 12345,
            IsBot = false,
            FirstName = "–ò–≤–∞–Ω",
            LastName = "–ò–≤–∞–Ω–æ–≤",
            Username = "ivan_ivanov"
        };
    }

    public static User CreateInvalidUser()
    {
        return new User
        {
            Id = 67890,
            IsBot = false,
            FirstName = "–û—á–µ–Ω—å–î–ª–∏–Ω–Ω–æ–µ–ò–º—è–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–ö–æ—Ç–æ—Ä–æ–µ–ü—Ä–µ–≤—ã—à–∞–µ—Ç–î–æ–ø—É—Å—Ç–∏–º—É—é–î–ª–∏–Ω—É–ò–î–æ–ª–∂–Ω–æ–ë—ã—Ç—å–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ–ü–æ–ü—Ä–∞–≤–∏–ª–∞–º–ú–æ–¥–µ—Ä–∞—Ü–∏–∏",
            LastName = "–û—á–µ–Ω—å–î–ª–∏–Ω–Ω–∞—è–§–∞–º–∏–ª–∏—è–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–ö–æ—Ç–æ—Ä–æ–µ–ü—Ä–µ–≤—ã—à–∞–µ—Ç–î–æ–ø—É—Å—Ç–∏–º—É—é–î–ª–∏–Ω—É–ò–î–æ–ª–∂–Ω–æ–ë—ã—Ç—å–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ–ü–æ–ü—Ä–∞–≤–∏–ª–∞–º–ú–æ–¥–µ—Ä–∞—Ü–∏–∏",
            Username = "very_long_username_that_exceeds_maximum_length_and_should_be_banned_by_moderation_rules"
        };
    }
} 