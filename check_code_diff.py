#!/usr/bin/env python3
import re

def extract_method_content(file_path, method_name):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–µ—Ç–æ–¥–∞ –∏–∑ —Ñ–∞–π–ª–∞"""
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—â–µ–º –º–µ—Ç–æ–¥ –ø–æ –∏–º–µ–Ω–∏
    pattern = rf'{method_name}\s*\([^)]*\)\s*\{{(.*?)\n\s*\}}'
    match = re.search(pattern, content, re.DOTALL)
    
    if match:
        return match.group(1).strip()
    return None

def normalize_code(code):
    """–ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –∫–æ–¥ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (—É–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ —Ç.–¥.)"""
    if not code:
        return ""
    
    # –£–±–∏—Ä–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    code = re.sub(r'//.*$', '', code, flags=re.MULTILINE)
    code = re.sub(r'/\*.*?\*/', '', code, flags=re.DOTALL)
    
    # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
    code = re.sub(r'\s+', ' ', code)
    code = code.strip()
    
    return code

def compare_methods():
    """–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –º–µ—Ç–æ–¥—ã BanUserForLongName"""
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –º–µ—Ç–æ–¥—ã
    mh_method = extract_method_content('ClubDoorman/Handlers/MessageHandler.cs', 'BanUserForLongName')
    ubs_method = extract_method_content('ClubDoorman/Services/UserBanService.cs', 'BanUserForLongName')
    
    if not mh_method:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –º–µ—Ç–æ–¥ BanUserForLongName –≤ MessageHandler")
        return
    
    if not ubs_method:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –º–µ—Ç–æ–¥ BanUserForLongName –≤ UserBanService")
        return
    
    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–æ–¥
    mh_normalized = normalize_code(mh_method)
    ubs_normalized = normalize_code(ubs_method)
    
    print("üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ BanUserForLongName:")
    print("=" * 60)
    
    # –£–±–∏—Ä–∞–µ–º —Ä–∞–∑–ª–∏—á–∏—è –≤ –∏–º–µ–Ω–∞—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö (logger, bot, messageService, userFlowLogger)
    mh_clean = re.sub(r'_\w+\.', '_.', mh_normalized)
    ubs_clean = re.sub(r'_\w+\.', '_.', ubs_normalized)
    
    if mh_clean == ubs_clean:
        print("‚úÖ –ö–û–î –°–û–í–ü–ê–î–ê–ï–¢ –î–û –ë–£–ö–í–û–ß–ö–ò!")
        print("   (–∏—Å–∫–ª—é—á–∞—è –∏–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö)")
    else:
        print("‚ùå –ö–û–î –ù–ï –°–û–í–ü–ê–î–ê–ï–¢!")
        print("\nüìã –†–∞–∑–ª–∏—á–∏—è:")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–∏—è
        mh_lines = mh_clean.split(';')
        ubs_lines = ubs_clean.split(';')
        
        for i, (mh_line, ubs_line) in enumerate(zip(mh_lines, ubs_lines)):
            if mh_line.strip() != ubs_line.strip():
                print(f"   –°—Ç—Ä–æ–∫–∞ {i+1}:")
                print(f"     MH:  {mh_line.strip()}")
                print(f"     UBS: {ubs_line.strip()}")
                print()

if __name__ == "__main__":
    compare_methods() 