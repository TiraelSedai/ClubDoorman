#!/bin/bash
# CLI wrapper –¥–ª—è Enhanced DX Tool
# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–±—Ä–∏–∫

set -e

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if [[ ! -f "$PROJECT_ROOT/ClubDoorman.sln" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ ClubDoorman"
    echo "   –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
    echo "   –û–∂–∏–¥–∞–µ–º–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $PROJECT_ROOT"
    exit 1
fi

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –ø—É—Ç–µ–π
cd "$SCRIPT_DIR"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "üöÄ Enhanced DX Tool - –£–ª—É—á—à–µ–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "  ./dxgen <–∫–æ–º–∞–Ω–¥–∞> [–æ–ø—Ü–∏–∏]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  generate <–∫–ª–∞—Å—Å>           - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ—Å—Ç–æ–≤—É—é —Ñ–∞–±—Ä–∏–∫—É –¥–ª—è –∫–ª–∞—Å—Å–∞"
    echo "  generate-simple <–∫–ª–∞—Å—Å>    - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—É—é —Ñ–∞–±—Ä–∏–∫—É —Å –∞–Ω–∞–ª–∏–∑–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤"
    echo "  generate-all               - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ñ–∞–±—Ä–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤"
    echo "  generate-templates <–∫–ª–∞—Å—Å> - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —à–∞–±–ª–æ–Ω—ã —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∫–ª–∞—Å—Å–∞"
    echo "  dry-run                    - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤ –±–µ–∑ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"
    echo "  analyze-interfaces <–∫–ª–∞—Å—Å> - –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∫–ª–∞—Å—Å–∞"
    echo "  validate <–∫–ª–∞—Å—Å>           - –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  ./dxgen generate ModerationService"
    echo "  ./dxgen generate-simple MessageHandler"
    echo "  ./dxgen generate-templates SpamHamClassifier"
    echo "  ./dxgen analyze-interfaces IUserManager"
    echo "  ./dxgen validate ModerationService"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  --output <—Ñ–∞–π–ª>            - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–∞–π–ª"
    echo "  --help, -h                 - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [[ $# -eq 0 ]]; then
    show_help
    exit 0
fi

COMMAND=""
CLASS_NAME=""
OUTPUT_FILE=""

while [[ $# -gt 0 ]]; do
    case $1 in
        --help|-h)
            show_help
            exit 0
            ;;
        --output)
            OUTPUT_FILE="$2"
            shift 2
            ;;
        generate|generate-simple|generate-templates|analyze-interfaces|validate)
            COMMAND="$1"
            if [[ $# -lt 2 ]]; then
                echo "‚ùå –û—à–∏–±–∫–∞: –î–ª—è –∫–æ–º–∞–Ω–¥—ã '$1' –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è –∫–ª–∞—Å—Å–∞"
                echo "   –ü—Ä–∏–º–µ—Ä: ./dxgen $1 ModerationService"
                exit 1
            fi
            CLASS_NAME="$2"
            shift 2
            ;;
        generate-all|dry-run)
            COMMAND="$1"
            shift
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            show_help
            exit 1
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
if ! command -v python3 &> /dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if [[ ! -f "enhanced_dx_tool.py" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª enhanced_dx_tool.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
echo "üîß Enhanced DX Tool - $COMMAND"
echo "üìÅ –ü—Ä–æ–µ–∫—Ç: $PROJECT_ROOT"
echo ""

case $COMMAND in
    generate)
        echo "üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Ñ–∞–±—Ä–∏–∫–∏ –¥–ª—è $CLASS_NAME..."
        if [[ -n "$OUTPUT_FILE" ]]; then
            python3 enhanced_dx_tool.py generate --class "$CLASS_NAME" --project-root "$PROJECT_ROOT" --output "$OUTPUT_FILE"
        else
            python3 enhanced_dx_tool.py generate --class "$CLASS_NAME" --project-root "$PROJECT_ROOT"
        fi
        ;;
    
    generate-simple)
        echo "üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ –¥–ª—è $CLASS_NAME..."
        if [[ -n "$OUTPUT_FILE" ]]; then
            python3 enhanced_dx_tool.py generate-simple --class "$CLASS_NAME" --project-root "$PROJECT_ROOT" --output "$OUTPUT_FILE"
        else
            python3 enhanced_dx_tool.py generate-simple --class "$CLASS_NAME" --project-root "$PROJECT_ROOT"
        fi
        ;;
    
    generate-templates)
        echo "üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è $CLASS_NAME..."
        if [[ -n "$OUTPUT_FILE" ]]; then
            python3 enhanced_dx_tool.py generate-templates --class "$CLASS_NAME" --project-root "$PROJECT_ROOT" --output "$OUTPUT_FILE"
        else
            python3 enhanced_dx_tool.py generate-templates --class "$CLASS_NAME" --project-root "$PROJECT_ROOT"
        fi
        ;;
    
    generate-all)
        echo "üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–±—Ä–∏–∫ –¥–ª—è –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤..."
        python3 enhanced_dx_tool.py generate-all --project-root "$PROJECT_ROOT"
        ;;
    
    dry-run)
        echo "üîç –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤..."
        python3 enhanced_dx_tool.py dry-run --project-root "$PROJECT_ROOT"
        ;;
    
    analyze-interfaces)
        echo "üîç –ê–Ω–∞–ª–∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –¥–ª—è $CLASS_NAME..."
        python3 enhanced_dx_tool.py analyze-interfaces --class "$CLASS_NAME" --project-root "$PROJECT_ROOT"
        ;;
    
    validate)
        echo "‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –¥–ª—è $CLASS_NAME..."
        python3 enhanced_dx_tool.py validate --class "$CLASS_NAME" --project-root "$PROJECT_ROOT"
        ;;
    
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $COMMAND"
        show_help
        exit 1
        ;;
esac

echo ""
echo "‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" 