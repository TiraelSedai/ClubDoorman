#!/usr/bin/env python3
import re

def extract_full_method(file_path, method_name):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π –º–µ—Ç–æ–¥ –∏–∑ —Ñ–∞–π–ª–∞"""
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—â–µ–º –º–µ—Ç–æ–¥ –ø–æ –∏–º–µ–Ω–∏ (–≤–∫–ª—é—á–∞—è —Å–∏–≥–Ω–∞—Ç—É—Ä—É)
    pattern = rf'public async Task {method_name}\(.*?\)\s*\{{(.*?)\n\s*\}}'
    match = re.search(pattern, content, re.DOTALL)
    
    if match:
        return match.group(0)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–µ—Å—å –º–µ—Ç–æ–¥
    return None

def extract_internal_method(file_path, method_name):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç internal –º–µ—Ç–æ–¥ –∏–∑ —Ñ–∞–π–ª–∞"""
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—â–µ–º internal –º–µ—Ç–æ–¥ –ø–æ –∏–º–µ–Ω–∏
    pattern = rf'internal async Task {method_name}\(.*?\)\s*\{{(.*?)\n\s*\}}'
    match = re.search(pattern, content, re.DOTALL)
    
    if match:
        return match.group(0)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–µ—Å—å –º–µ—Ç–æ–¥
    return None

def show_full_diff():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–π diff –º–µ—Ç–æ–¥–æ–≤"""
    
    print("üîç –ü–û–õ–ù–´–ô DIFF –ú–ï–¢–û–î–û–í BanUserForLongName")
    print("=" * 80)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –º–µ—Ç–æ–¥—ã
    mh_method = extract_internal_method('ClubDoorman/Handlers/MessageHandler.cs', 'BanUserForLongName')
    ubs_method = extract_full_method('ClubDoorman/Services/UserBanService.cs', 'BanUserForLongNameAsync')
    
    if not mh_method:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –º–µ—Ç–æ–¥ –≤ MessageHandler")
        return
    
    if not ubs_method:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –º–µ—Ç–æ–¥ –≤ UserBanService")
        return
    
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   MessageHandler: {len(mh_method)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"   UserBanService: {len(ubs_method)} —Å–∏–º–≤–æ–ª–æ–≤")
    print()
    
    print("üìã MESSAGEHANDLER (–û–†–ò–ì–ò–ù–ê–õ):")
    print("-" * 40)
    print(mh_method)
    print()
    
    print("üìã USERBANSERVICE (–ú–ò–ì–†–ò–†–û–í–ê–ù–ù–´–ô):")
    print("-" * 40)
    print(ubs_method)
    print()
    
    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    mh_clean = re.sub(r'internal async Task', 'public async Task', mh_method)
    mh_clean = re.sub(r'BanUserForLongName', 'BanUserForLongNameAsync', mh_clean)
    
    # –£–±–∏—Ä–∞–µ–º —Ä–∞–∑–ª–∏—á–∏—è –≤ –∏–º–µ–Ω–∞—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    mh_clean = re.sub(r'_\w+\.', '_.', mh_clean)
    ubs_clean = re.sub(r'_\w+\.', '_.', ubs_method) # Corrected: use ubs_method here
    
    # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    mh_normalized = re.sub(r'\s+', ' ', mh_clean).strip()
    ubs_normalized = re.sub(r'\s+', ' ', ubs_clean).strip()
    
    if mh_normalized == ubs_normalized:
        print("‚úÖ –õ–û–ì–ò–ö–ê –ü–û–õ–ù–û–°–¢–¨–Æ –°–û–í–ü–ê–î–ê–ï–¢!")
        print("   (–∏—Å–∫–ª—é—á–∞—è –∏–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–æ—Å—Ç—É–ø–∞)")
    else:
        print("‚ùå –õ–û–ì–ò–ö–ê –ù–ï –°–û–í–ü–ê–î–ê–ï–¢!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–∏—è –ø–æ —Å—Ç—Ä–æ–∫–∞–º
        mh_lines = mh_normalized.split(';')
        ubs_lines = ubs_normalized.split(';')
        
        print("\nüìã –†–ê–ó–õ–ò–ß–ò–Ø:")
        for i, (mh_line, ubs_line) in enumerate(zip(mh_lines, ubs_lines)):
            if mh_line.strip() != ubs_line.strip():
                print(f"   –°—Ç—Ä–æ–∫–∞ {i+1}:")
                print(f"     MH:  {mh_line.strip()}")
                print(f"     UBS: {ubs_line.strip()}")
                print()

if __name__ == "__main__":
    show_full_diff() 